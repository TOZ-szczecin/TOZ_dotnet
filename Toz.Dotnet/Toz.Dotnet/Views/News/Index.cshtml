@using Microsoft.AspNetCore.Mvc.Localization
@using Toz.Dotnet.Models.EnumTypes
@using Microsoft.AspNetCore.Mvc.Rendering

@model IEnumerable<Toz.Dotnet.Models.News>
@inject IViewLocalizer Localizer

@{
    ViewData["Title"] = @Localizer["PageTitle"];
}

<div id='myModal' class='modal fade in'>
    <div class="modal-dialog">
        <div class="modal-content">
            <div id='myModalContent'></div>
        </div>
    </div>
</div>

<div class="panel panel-default panel-table">
    <div class="panel-heading">
        <div class="row">
            <div class="col col-xs-6">
                <h3 class="panel-title">@Localizer["PageTitle"]</h3>
            </div>
            <div class="col col-xs-6 text-right">
                @Html.ActionLink(@Localizer["Add"].Value, "Add", "News", null, new { data_modal = "", @class = "btn btn-sm btn-primary btn-create" })
            </div>
        </div>
    </div>
    <div class="panel-body">
            <table class="table table-striped table-bordered table-list">
                <thead>
                    <tr>
                        <th></th>
                        <th>@Localizer["Title"]</th>
                        <th>@Localizer["Photo"]</th>
                        <th>@Localizer["ShortBody"]</th>
                        <th></th>
                        <th><em class="fa fa-cog"></em></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
            {
                        <tr>
                            @if (!@item.Published.HasValue)
                            {
                                <td>@Localizer["Lack"]</td>
                            }
                            else
                            {
                                <td>@item.Published</td>
                            }
                            <td style="word-wrap:break-word;"><div style="width:200px;overflow:auto">@item.Title</div></td>
                            <td><img src="data:image;base64,@Convert.ToBase64String(item.Photo)" alt="Pet photo" /></td>
                            <td class="overflow-ellipsis">@item.Contents</td>

                            @if (@item.Type == NewsStatus.Unreleased)
                            {
                                <td>
                                    <div class="unreleased pagination-centered">
                                        <div class="glyphicon glyphicon-exclamation-sign"></div>
                                        @Localizer["Unreleased"]
                                    </div>
                                </td>
                            }
                            else if (@item.Type == NewsStatus.Archived)
                            {
                                <td>
                                    <div class="archived pagination-centered">
                                        <div class="glyphicon glyphicon-exclamation-sign"></div>
                                        @Localizer["Archived"]
                                    </div>
                                </td>
                            }
                            else
                            {
                                <td></td>
                            }

                            <td>@Html.ActionLink(@Localizer["Edit"].Value, "Edit", "News", new { id = item.Id }, new { data_modal = "", @class = "btn btn-primary btn-block" })</td>
                        </tr>
                    }
                </tbody>
            </table>
        <div class="panel-footer"></div>
    </div>
</div>